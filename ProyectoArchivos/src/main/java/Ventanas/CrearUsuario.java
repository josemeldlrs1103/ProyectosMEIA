/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;
import Clases.VerificadorPassword;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.Calendar;
import java.util.ArrayList;
import java.util.Collections;

/**
 *
 * @author josei
 */
public class CrearUsuario extends javax.swing.JFrame {

    /**
     * Creates new form CrearUsuario
     */
    public CrearUsuario() {
        try {
            String Contenido = "";
            String Contenido2 = "";
            FileReader usuarios = new FileReader("C:/MEIA/usuario.txt");   
            FileReader bitacora = new FileReader("C:/MEIA/bitacora.txt");
            BufferedReader reader = new BufferedReader(usuarios);
            BufferedReader reader2 = new BufferedReader(bitacora);
            Contenido = reader.readLine();
            Contenido2 = reader2.readLine();
            if ( Contenido == null && Contenido2 == null)
            {
                Rol = 1;
            }
            else
            {
                Rol = 0;
            }
            reader.close();
            reader2.close();
            usuarios.close();
            bitacora.close();
        } catch (Exception e) {
        }
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbDia = new javax.swing.JComboBox<>();
        cbMes = new javax.swing.JComboBox<>();
        cbAnio = new javax.swing.JComboBox<>();
        tfUsuario = new javax.swing.JTextField();
        tfNombre = new javax.swing.JTextField();
        tfTelefono = new javax.swing.JTextField();
        tfApellido = new javax.swing.JTextField();
        tfCorreo = new javax.swing.JTextField();
        tfImagen = new javax.swing.JTextField();
        tfContrasena = new javax.swing.JPasswordField();
        btCargarFoto = new javax.swing.JButton();
        btRegistrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registrarse");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Usuario");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Apellido");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("Contraseña");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("Teléfono");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("Nacimiento");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Día");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Correo");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Año");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("Imagen");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Mes");

        cbDia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", " " }));

        cbMes.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre", " " }));

        cbAnio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbAnio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", " ", " " }));

        tfUsuario.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        tfNombre.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        tfTelefono.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        tfApellido.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        tfCorreo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        tfImagen.setEditable(false);
        tfImagen.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        tfContrasena.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        btCargarFoto.setText("Buscar Imagen");
        btCargarFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCargarFotoMouseClicked(evt);
            }
        });

        btRegistrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btRegistrar.setText("Registrar");
        btRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btRegistrarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(tfImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btCargarFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbAnio, 0, 69, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(36, 36, 36))))
            .addGroup(layout.createSequentialGroup()
                .addGap(138, 138, 138)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btRegistrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(tfContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12)
                    .addComponent(jLabel10)
                    .addComponent(cbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(btCargarFoto))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCargarFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCargarFotoMouseClicked
        //Cargar la foto de perfil
        JFileChooser dialogo = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Foto de perfil", "jpg");
        File ficheroImagen;
        String rutaArchivo;
        dialogo.setFileFilter(filtro);
        int valor = dialogo.showOpenDialog(this);
        if (valor == JFileChooser.APPROVE_OPTION) {
            ficheroImagen = dialogo.getSelectedFile();
            rutaArchivo = ficheroImagen.getPath();
            CopiarImagenes(ficheroImagen);
            tfImagen.setText(ImagenCopiada.getPath());
        } 
    }//GEN-LAST:event_btCargarFotoMouseClicked

    private void btRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btRegistrarMouseClicked
        //Verificar que los campos están llenos
        if ((tfUsuario.getText().equals("")) || (tfNombre.getText().equals("")) || (tfApellido.getText().equals("")) || (tfContrasena.getPassword().length==0)  || (tfTelefono.getText().equals("")) || (tfCorreo.getText().equals("")) || (tfImagen.getText().equals("")))
                {
                    JOptionPane.showMessageDialog(null,"Para completar el registro es necesario que se rellenen todos los campos del formulario");
                }
        else
        {
            //Contiene la información del usuario que se está registrando
            String InfoUsuario="";
            String ContrasenaE = String.valueOf(tfContrasena.getPassword());
            String Fecha = cbDia.getSelectedItem() + "/" + cbMes.getSelectedItem() + "/" + cbAnio.getSelectedItem();
            //Verificar contraseña antes de registrar
            while (Evaluar.Verificar(ContrasenaE)==0)
            {
                tfContrasena.setText("");
                JOptionPane.showMessageDialog(null, "La contraseña no cumple con el nivel de seguridad requerido por el sistema");
                String Reemplazo = JOptionPane.showInputDialog("Ingrese una nueva contraseña");
                ContrasenaE = Reemplazo;
            }
            InfoUsuario = tfUsuario.getText() + "|" + tfNombre.getText() + "|" + tfApellido.getText()  + "|" + ContrasenaE  + "|" + Rol + "|" + Fecha  + "|" + tfCorreo.getText()  + "|" + tfTelefono.getText()  + "|" + tfImagen.getText()  + "|" + "|" + "1\n";
                File Registro = new File ("C:/MEIA/bitacora.txt");
                try {
                    FileWriter Registrar = new FileWriter(Registro, true);
                    Registrar.write(InfoUsuario);
                    Registrar.close();
                    JOptionPane.showMessageDialog(null, "Se ha registrado exitosamente. \n Por favor inicie sesión");
                    this.setVisible(false);
                    Login Inicio = new Login();
                    Inicio.setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(CrearUsuario.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }//GEN-LAST:event_btRegistrarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrearUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrearUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrearUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrearUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CrearUsuario().setVisible(true);
            }
        });
    }
    public static String MaterialNuevo;
    public static int Rol = 0;
    File ImagenCopiada;
    public void CopiarImagenes(File origen) {
        //Copiar la imagen a la carpeta MEIA
        String ruta_destino = "C:\\MEIA\\fotografia";
        File ruta = new File(ruta_destino);       
        File nuevo = new File(ruta_destino + "\\" + origen.getName());
        try {
            Files.copy(Paths.get(origen.getAbsolutePath()), Paths.get(nuevo.getAbsolutePath()), StandardCopyOption.REPLACE_EXISTING);
            ImagenCopiada = new File(ruta_destino + "\\" + origen.getName());
        } catch (Exception e) {
        }
    }
    VerificadorPassword Evaluar = new VerificadorPassword();
public void Reorganizar ()
{
    String linealeida1,linealeida2;
    int numerolinea=1;
    ArrayList<String> MaterialesReorganizar = new ArrayList<String>();
    //Reorganización materiales-matarialesbitacora
    File BitacoraM = new File ("C:/MEIA/bitacora.txt");
    File MaterialesA = new File ("C:/MEIA/usuario.txt");
    ArrayList<String> lineasleidas2 = new ArrayList<String>();
    try { //Se busca al usuario ingresado en el archivo de texto
                FileReader Bitacoratxt = new FileReader("C:/MEIA/bitacora.txt");
                BufferedReader UsuarioBitacora = new BufferedReader(Bitacoratxt);
                while (((linealeida1 = UsuarioBitacora.readLine()) != null)) 
                {   
                    if (numerolinea < 4)
                    {
                        lineasleidas2.add(linealeida1);
                        numerolinea++;
                    }
                    else
                    {
                        MaterialNuevo = linealeida1;
                    }
                }
                UsuarioBitacora.close();
                Bitacoratxt.close();
                if ((numerolinea) == 4)
                {
                    BitacoraM.delete();
                    BitacoraM.createNewFile();
                    FileWriter GuardarNuevoMaterial = new FileWriter (BitacoraM, true);
                    GuardarNuevoMaterial.write(MaterialNuevo);
                    GuardarNuevoMaterial.close();
                    FileReader Usuariotxt = new FileReader("C:/MEIA/usuario.txt");
                    BufferedReader UsuarioFile = new BufferedReader(Usuariotxt);
                    if ((linealeida2 = UsuarioFile.readLine())!= null)
                    {
                        lineasleidas2.add(linealeida2);
                        while((linealeida2 = UsuarioFile.readLine())!= null)
                        {
                            lineasleidas2.add(linealeida2);
                        }
                        UsuarioFile.close();
                        Usuariotxt.close();
                        Collections.sort(lineasleidas2,String.CASE_INSENSITIVE_ORDER);
                        MaterialesA.delete();
                        MaterialesA.createNewFile();
                        FileWriter GuardarCambio = new FileWriter (MaterialesA, true);
                        for(var linea : lineasleidas2)
                        {
                           String [] VerificarEstado = linea.split("\\|");
                           if (VerificarEstado[6].equals("1"))
                           {
                               GuardarCambio.write(linea +"\n");
                           }
                        }
                        GuardarCambio.close();
                    }
                    else
                    {
                        Collections.sort(lineasleidas2,String.CASE_INSENSITIVE_ORDER);
                        MaterialesA.delete();
                        FileWriter GuardarCambio = new FileWriter (MaterialesA, true);
                        MaterialesA.createNewFile();
                        for(var linea : lineasleidas2)
                        {
                           String [] VerificarEstado = linea.split("\\|");
                           if (VerificarEstado[6].equals("1"))
                           {
                               GuardarCambio.write(linea +"\n");
                           }
                        }
                        GuardarCambio.close();
                    }
                    UsuarioFile.close();
                    Usuariotxt.close();
                } 
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
    
}
public void ActualizarDescriptores()
{
    //Variables que se usan para la actualización de desc_materialesbitacora
    int TotalRMB=0, TotalAMB = 0, TotalIMB=0;
    ArrayList<String> CantidadMaterialesBitacora = new ArrayList<String>();
    File DescMB = new File("C:/MEIA/desc_bitacora.txt");
    String linealeida3 ="";
    try 
    { //Se busca al usuario ingresado en el archivo de texto
        FileReader Materiales = new FileReader("C:/MEIA/bitacora.txt");
        BufferedReader CantMateriales = new BufferedReader(Materiales);
        while ((linealeida3 = CantMateriales.readLine())!= null)
        {
            String[] VerificarEstado = linealeida3.split("\\|");
            if (VerificarEstado[6].equals("1"))
            {
                TotalAMB ++;
            }
            else
            {
                TotalIMB ++;
            }
        }
        CantMateriales.close();
        Materiales.close();
        TotalRMB = TotalAMB + TotalIMB;
        FileReader DescMateriales = new FileReader("C:/MEIA/desc_bitacora.txt");
        BufferedReader DescMat = new BufferedReader(DescMateriales);
        while ((linealeida3 = DescMat.readLine())!= null)
        {
            CantidadMaterialesBitacora.add(linealeida3);      
        }
        Calendar FechaTransaccion = Calendar.getInstance();
        int Anio = FechaTransaccion.get(Calendar.YEAR);
        int Mes = FechaTransaccion.get(Calendar.MONTH);
        int Dia = FechaTransaccion.get(Calendar.DAY_OF_MONTH);
        int Hora = FechaTransaccion.get(Calendar.HOUR_OF_DAY);
        int Minuto = FechaTransaccion.get(Calendar.MINUTE);
        int Segundo = FechaTransaccion.get(Calendar.SECOND);
        String Modificar = String.valueOf(Dia +"/"+Mes+"/"+ Anio+" "+Hora+":"+Minuto+":"+Segundo);
        CantidadMaterialesBitacora.set(2, ("F_modificación: " + Modificar));
        CantidadMaterialesBitacora.set(4, ("cantidad_total " + TotalRMB));
        CantidadMaterialesBitacora.set(5, ("cantidad_activos: " + TotalAMB));
        CantidadMaterialesBitacora.set(6, ("cantidad_inactivos: " + TotalIMB));
        DescMat.close();
        DescMateriales.close();
        DescMB.delete();
        DescMB.createNewFile();
        FileWriter ModificarDescMB = new FileWriter(DescMB, true);
        for(String lineadesc : CantidadMaterialesBitacora)
        {
            ModificarDescMB.write(lineadesc + "\n");
        }
        ModificarDescMB.close();
           
    } catch (Exception e) 
    {
        JOptionPane.showMessageDialog(null,e.getMessage());
    }
    //Variables que se usan para la actualización de desc_usuario
    int TotalRM=0, TotalAM = 0, TotalIM=0;
    ArrayList<String> CantidadMaterialestxt = new ArrayList<String>();
    File DescM = new File("C:/MEIA/desc_materiales.txt");
    String linealeida4 ="";
    try 
    { //Se busca al usuario ingresado en el archivo de texto
        FileReader Materiales = new FileReader("C:/MEIA/usuario.txt");
        BufferedReader CantMateriales = new BufferedReader(Materiales);
        while ((linealeida4 = CantMateriales.readLine())!= null)
        {
            String[] VerificarEstado = linealeida4.split("\\|");
            if (VerificarEstado[6].equals("1"))
            {
                TotalAM ++;
            }
            else
            {
                TotalIM ++;
            }
        }
        CantMateriales.close();
        Materiales.close();
        TotalRM = TotalAM + TotalIM;
        FileReader DescMateriales = new FileReader("C:/MEIA/desc_materiales.txt");
        BufferedReader DescMateria = new BufferedReader(DescMateriales);
        while ((linealeida4 = DescMateria.readLine())!= null)
        {
            CantidadMaterialestxt.add(linealeida4);      
        }
        Calendar FechaTransaccion = Calendar.getInstance();
        int Anio = FechaTransaccion.get(Calendar.YEAR);
        int Mes = FechaTransaccion.get(Calendar.MONTH);
        int Dia = FechaTransaccion.get(Calendar.DAY_OF_MONTH);
        int Hora = FechaTransaccion.get(Calendar.HOUR_OF_DAY);
        int Minuto = FechaTransaccion.get(Calendar.MINUTE);
        int Segundo = FechaTransaccion.get(Calendar.SECOND);
        String Modificar = String.valueOf(Dia +"/"+Mes+"/"+ Anio+" "+Hora+":"+Minuto+":"+Segundo);
        CantidadMaterialestxt.set(2, ("F_modificación: " + Modificar));
        CantidadMaterialestxt.set(3, ("cantiad_total: " + TotalRM));
        CantidadMaterialestxt.set(4, ("Cantidad_activos: " + TotalAM));
        CantidadMaterialestxt.set(5, ("Cantidad_inactivos: " + TotalIM));
        DescMateria.close();
        DescMateriales.close();
        DescM.delete();
        DescM.createNewFile();
        FileWriter ModificarDescM = new FileWriter(DescM, true);
        for(String lineadesc : CantidadMaterialestxt)
        {
            ModificarDescM.write(lineadesc + "\n");
        }
        
        ModificarDescM.close();           
    } catch (Exception e) 
    {
        JOptionPane.showMessageDialog(null,e.getMessage());
    }
    
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCargarFoto;
    private javax.swing.JButton btRegistrar;
    private javax.swing.JComboBox<String> cbAnio;
    private javax.swing.JComboBox<String> cbDia;
    private javax.swing.JComboBox<String> cbMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField tfApellido;
    private javax.swing.JPasswordField tfContrasena;
    private javax.swing.JTextField tfCorreo;
    private javax.swing.JTextField tfImagen;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfTelefono;
    private javax.swing.JTextField tfUsuario;
    // End of variables declaration//GEN-END:variables
}
