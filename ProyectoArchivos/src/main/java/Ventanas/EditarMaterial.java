/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import static Clases.DatosMateriales.DatosMaterialesList;
import static Clases.DatosUsuario.DatosList;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author josei
 */
public class EditarMaterial extends javax.swing.JFrame {

    /**
     * Creates new form EditarMaterial
     */
    public EditarMaterial() {
        initComponents();
        tfNombre.setText(DatosMaterialesList[0]);
        tfTipo.setText(DatosMaterialesList[1]);
        tfImagen.setText(DatosMaterialesList[2]);
        tfTiempo.setText(DatosMaterialesList[3]);
        if(DatosMaterialesList[6].equals("1"))
        {
            jcEstado.setSelectedItem("Activo");
        }
        else
        {
            jcEstado.setSelectedItem("Inactivo");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfTipo = new javax.swing.JTextField();
        tfTiempo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        tfNombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfImagen = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jcEstado = new javax.swing.JComboBox<>();
        btCargar = new javax.swing.JButton();
        btActualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tfTipo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        tfTiempo.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Tipo:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Nombre:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Degradaci√≥n:");

        tfNombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Editar Material");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Imagen:");

        tfImagen.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Estado:");

        jcEstado.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jcEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));

        btCargar.setText("Cambiar");
        btCargar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCargarMouseClicked(evt);
            }
        });

        btActualizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btActualizar.setText("Actualizar");
        btActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btActualizarMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(tfImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btCargar, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(128, 128, 128)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(82, 82, 82)
                                .addComponent(jLabel5)
                                .addGap(18, 18, 18)
                                .addComponent(tfTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(tfTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(jcEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfImagen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btCargar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jcEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(btActualizar)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btCargarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCargarMouseClicked
        //Cargar la foto de perfil
        JFileChooser dialogo = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Foto de perfil", "jpg");
        File ficheroImagen;
        String rutaArchivo;
        dialogo.setFileFilter(filtro);
        int valor = dialogo.showOpenDialog(this);
        if (valor == JFileChooser.APPROVE_OPTION) {
            ficheroImagen = dialogo.getSelectedFile();
            rutaArchivo = ficheroImagen.getPath();
            CopiarImagenes(ficheroImagen);
            tfImagen.setText(ImagenCopiada.getPath());
        } 
    }//GEN-LAST:event_btCargarMouseClicked

    private void btActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btActualizarMouseClicked
        DatosMaterialesList[0] = tfNombre.getText();
        DatosMaterialesList[1] = tfTipo.getText();
        DatosMaterialesList[2] = tfImagen.getText();
        DatosMaterialesList[3] = tfTiempo.getText();
        if((jcEstado.getSelectedItem()).equals("Activo"))
        {
            DatosMaterialesList[6] = "1";
        }
        else
        {
            DatosMaterialesList[6] = "0";
        }
        ArrayList<String> UsuariosRegistrados = new ArrayList<String>();
        UsuariosRegistrados.clear();
        boolean UsuarioEncontrado = false;
        String linealeida1 = "", linealeida2 ="";
        //Variables que se usan para reescribir los archivos con los cambios realizados
        File Bitacora = new File ("C:/MEIA/materiales_bitacora.txt");
        File BitacoraR = new File ("C:/MEIA/materiales_bitacora.txt");
        File Usuarios = new File ("C:/MEIA/materiales.txt");
        File UsuariosR = new File ("C:/MEIA/materiales.txt");
        try { //Se busca al usuario ingresado en el archivo de texto
                FileReader Bitacoratxt = new FileReader("C:/MEIA/materiales_bitacora.txt");
                BufferedReader UsuarioBitacora = new BufferedReader(Bitacoratxt);
                while (((linealeida1 = UsuarioBitacora.readLine()) != null)) {                    
                    if (linealeida1.contains(DatosMaterialesList[0])) 
                    { 
                        UsuarioEncontrado = true;
                        String CambioInfo = DatosMaterialesList[0] + "|" + DatosMaterialesList[1] + "|" +DatosMaterialesList[2] + "|" +DatosMaterialesList[3] + "|" +DatosMaterialesList[4] + "|" +DatosMaterialesList[5];
                        UsuariosRegistrados.add(CambioInfo);
                        
                    }
                    else
                    {
                        UsuariosRegistrados.add(linealeida1);
                    }
                }
                UsuarioBitacora.close();
                Bitacoratxt.close();
                if (UsuarioEncontrado) 
                {
                    Bitacora.delete();
                    FileWriter GuardarCambio = new FileWriter (BitacoraR, true);
                    BitacoraR.createNewFile();
                    for (String Datos : UsuariosRegistrados)
                    {
                        GuardarCambio.write(Datos+"\n");
                    }
                    GuardarCambio.close();
                }
                else 
                {
                    UsuariosRegistrados.clear();
                    FileReader Usuariotxt = new FileReader("C:/MEIA/materiales.txt");
                    BufferedReader UsuarioArchivo = new BufferedReader(Usuariotxt);
                while (((linealeida2 = UsuarioArchivo.readLine()) != null)) 
                {                    
                    if (linealeida2.contains(DatosMaterialesList[0])) 
                    { 
                        UsuarioEncontrado = true; 
                        String CambioInfo = DatosMaterialesList[0] + "|" + DatosMaterialesList[1] + "|" +DatosMaterialesList[2] + "|" +DatosMaterialesList[3] + "|" +DatosMaterialesList[4] + "|" +DatosMaterialesList[5] + "|" + DatosMaterialesList[6];
                        UsuariosRegistrados.add(CambioInfo);
                    }
                    else
                    {
                        UsuariosRegistrados.add(linealeida2);
                    }
                }
                UsuarioArchivo.close();
                Usuariotxt.close();
                if(UsuarioEncontrado)
                {
                    Usuarios.delete();
                    FileWriter GuardarCambio = new FileWriter (UsuariosR, true);
                    UsuariosR.createNewFile();
                    for (String Datos : UsuariosRegistrados)
                    {
                        GuardarCambio.write(Datos+"\n");
                    }
                    GuardarCambio.close();
                }
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        JOptionPane.showMessageDialog(null, "La informaci√≥n ha sido actualizada inicie sesi√≥n de nuevo para visualizar los cambios");
        this.setVisible(false);
    }//GEN-LAST:event_btActualizarMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditarMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditarMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditarMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditarMaterial.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditarMaterial().setVisible(true);
            }
        });
    }
    File ImagenCopiada;
    public void CopiarImagenes(File origen) {
        //Copiar la imagen a la carpeta MEIA
        String ruta_destino = "C:\\MEIA\\fotografia";
        File ruta = new File(ruta_destino);       
        File nuevo = new File(ruta_destino + "\\" + origen.getName());
        try {
            Files.copy(Paths.get(origen.getAbsolutePath()), Paths.get(nuevo.getAbsolutePath()), StandardCopyOption.REPLACE_EXISTING);
            ImagenCopiada = new File(ruta_destino + "\\" + origen.getName());
        } catch (Exception e) {
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btActualizar;
    private javax.swing.JButton btCargar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox<String> jcEstado;
    private javax.swing.JTextField tfImagen;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfTiempo;
    private javax.swing.JTextField tfTipo;
    // End of variables declaration//GEN-END:variables
}
