/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import static Clases.DatosUsuario.DatosList;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author josei
 */
public class HacerDonación extends javax.swing.JFrame {

    /**
     * Creates new form HacerDonación
     */
    public HacerDonación() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tfDescripcion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        taEvento = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        tfPeso = new javax.swing.JTextField();
        btDonar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cbDia = new javax.swing.JComboBox<>();
        cbMes = new javax.swing.JComboBox<>();
        cbAnio = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jcMateriales = new javax.swing.JComboBox<>();
        jcDonador = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        btCerrar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Hacer Donaciones");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Descripción:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 200, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Evento:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 260, -1, -1));

        tfDescripcion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(tfDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 215, -1));

        taEvento.setColumns(20);
        taEvento.setRows(5);
        jScrollPane1.setViewportView(taEvento);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 260, 215, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Peso:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, -1, -1));

        tfPeso.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(tfPeso, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 215, -1));

        btDonar.setText("Donar");
        btDonar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btDonarMouseClicked(evt);
            }
        });
        getContentPane().add(btDonar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, 103, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Fecha:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 150, -1, -1));

        cbDia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", " " }));
        getContentPane().add(cbDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, -1, -1));

        cbMes.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        getContentPane().add(cbMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 150, -1, -1));

        cbAnio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbAnio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", " ", " " }));
        getContentPane().add(cbAnio, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 150, 77, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Día");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 33, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Año");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 150, 42, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Mes");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 41, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Material:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, -1));

        jcMateriales.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(jcMateriales, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 215, -1));

        jcDonador.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(jcDonador, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 215, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setText("Donador:");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, -1, -1));

        btCerrar.setText("Cerrar");
        btCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btCerrarMouseClicked(evt);
            }
        });
        getContentPane().add(btCerrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 260, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        String linealeida1="";
        ArrayList<String> Donadores = new ArrayList<String>(); 
        ArrayList<String> Opciones = new ArrayList<String>();
        try { //Se busca al usuario ingresado en el archivo de texto
                FileReader BitacoraMateriales = new FileReader("C:/MEIA/Materiales2.txt");
                BufferedReader MaterialesBitacora = new BufferedReader(BitacoraMateriales);
                while (((linealeida1 = MaterialesBitacora.readLine()) != null)) 
                {   
                    String [] ExtraerMaterial = linealeida1.split("\\|");
                    Opciones.add(ExtraerMaterial[3]);
                }
                MaterialesBitacora.close();
                BitacoraMateriales.close();
                for(String mat : Opciones)
        {
            this.jcMateriales.addItem(mat);
        }
                ////////////////////////////////////////////////////////////////////////////////////////////
                FileReader DonadoresRegistro = new FileReader("C:/MEIA/bitacora.txt");
                BufferedReader DonadoresBitacora = new BufferedReader(DonadoresRegistro);
                while (((linealeida1 = DonadoresBitacora.readLine()) != null)) 
                {   
                    String [] NombreDonador = linealeida1.split("\\|");
                    Donadores.add(NombreDonador[0]);
                }
                DonadoresBitacora.close();
                DonadoresRegistro.close();
                FileReader DonadoresArchivo = new FileReader("C:/MEIA/usuario.txt");
                BufferedReader DonadoresLector = new BufferedReader(DonadoresArchivo);
                while (((linealeida1 = DonadoresLector.readLine()) != null)) 
                {   
                    String [] NombreDonador = linealeida1.split("\\|");
                    Donadores.add(NombreDonador[0]);
                }
                DonadoresLector.close();
                DonadoresArchivo.close();                
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        for(String Don : Donadores)
        {
            this.jcDonador.addItem(Don);
        }
    }//GEN-LAST:event_formWindowOpened

    private void btDonarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDonarMouseClicked
        String Usuario = String.valueOf(jcDonador.getSelectedItem());
        String Material = String.valueOf(jcMateriales.getSelectedItem());
        String Descripcion = tfDescripcion.getText();
        String Peso = tfPeso.getText();
        String Evento = taEvento.getText();
        Calendar FechaTransaccion = Calendar.getInstance();
        Date fdate = new Date();
        int Anio = FechaTransaccion.get(Calendar.YEAR);
        int Mes = FechaTransaccion.get(Calendar.MONTH);
        int Dia = FechaTransaccion.get(Calendar.DAY_OF_MONTH);
        int Hora = FechaTransaccion.get(Calendar.HOUR_OF_DAY);
        int Minuto = FechaTransaccion.get(Calendar.MINUTE);
        int Segundo = FechaTransaccion.get(Calendar.SECOND);
        String Modificar = String.valueOf(Dia +"/"+Mes+"/"+ Anio);
        String FechaBack = cbDia.getSelectedItem() + "/"  + cbMes.getSelectedItem() + "/" + cbAnio.getSelectedItem();
        HacerNuevaDonacion(Usuario,Material,FechaBack,Peso,Descripcion,Evento,DatosList[0],Modificar);
        //ActualizarDescriptores();
        JOptionPane.showMessageDialog(null, "Donación realizada");
        this.setVisible(false);
    }//GEN-LAST:event_btDonarMouseClicked

    private void btCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btCerrarMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btCerrarMouseClicked
    public void HacerNuevaDonacion(String usuario,String material,String fecha,String Peso, String descripcion, String evento, String usuariologueado, String fechaActual)
    {
        String nuevoRgistroDonacion = usuario +"|"+ material+"|"+fecha+"|"+ Peso +"|"+ descripcion +"|"+evento+"|"+usuariologueado+"|"+fechaActual+"|"+1;
        String llave = usuario +","+ material+","+fecha;
        if (!Encontrado(usuario, material, fecha)) 
        {
            String direccion = InsertarIndexadoMaster(nuevoRgistroDonacion, 3);
            InsertarIndexadoIndex(llave, direccion);
            ActualizarDescriptores();
            ActualizarDescriptorIndexDonacion();
        }
    }
    
    public boolean Encontrado(String usuario, String material, String fecha)
    {
        boolean resultado = false;
        boolean usuarioencontrado = false;
        boolean materialencontrado = false;
        boolean fechaencontrada = false;
        ArrayList<String> lista = new ArrayList<>();
        String ruta = "C:\\MEIA\\DonacionIndex.txt";
        String linea = "";
        File f = new File(ruta);
        try{
            if (!f.exists()) {
                f.createNewFile();
            }
            FileReader fr = new FileReader(ruta);
            BufferedReader br = new BufferedReader(fr);
            linea = br.readLine();
            while(linea!=null){
                lista.add(linea);
                linea = br.readLine();
            }
            for(String x : lista)
            {
                if(x.contains(usuario)){
                    usuarioencontrado = true;
                }
            }
            if (usuarioencontrado) {
                for(String x : lista)
                {
                    if(x.contains(usuario+","+material)){
                        materialencontrado = true;
                    }
                }
            }
            if (materialencontrado){
                for(String x : lista)
                {
                    if(x.contains(usuario+","+material+","+fecha)){
                        fechaencontrada = true;
                    }
                }
            }
            if (fechaencontrada){
                resultado = true;
            }
        }catch(IOException ex){
            Logger.getLogger(HacerDonación.class.getName()).log(Level.SEVERE, null, ex);
        }
        return  resultado;
    }
    
    public String InsertarIndexadoMaster(String LineaInsertar,int MaxLineas)
    {
        boolean Escrito = false;
        int Bloque = 1;
        int IndiceLinea = 1;
        String ext = ".txt";
        String inicio = "C:\\MEIA\\Donacion_";
        String ruta = inicio + Bloque + ext;//C:\\MEIA\\Donacion_1.txt
        String linea = "";
        String direccion = "";
        ArrayList<String> lista = new ArrayList<>();
        try {
        while (!Escrito) {
            File f = new File(ruta);
            if (!f.exists()) {
                f.createNewFile();
            }
            FileReader fr = new FileReader(ruta);
            BufferedReader br = new BufferedReader(fr);
            linea = br.readLine();
            while (linea!=null) {
                lista.add(linea);
                IndiceLinea++;
                linea = br.readLine();
            }
            fr.close();
            br.close();
            if (IndiceLinea<=MaxLineas) {
                f.delete();
                f.createNewFile();
                FileWriter fw = new FileWriter(ruta);
                BufferedWriter bw = new BufferedWriter(fw);
                for (String x :lista) {
                    bw.write(x);
                    bw.newLine();
                }
                bw.write(LineaInsertar);
                //fw.close();
                bw.close();
                Escrito = true;
                direccion = Bloque+"."+IndiceLinea;
            }else{
                IndiceLinea = 1;
                lista = new ArrayList<>();
            }
            Bloque++;
            ruta = inicio + Bloque + ext;
        }
        } catch (IOException ex) {
            Logger.getLogger(HacerDonación.class.getName()).log(Level.SEVERE, null, ex);
        }
        return (direccion);
    }
    
    public void InsertarIndexadoIndex(String llave, String direccion)
    {
        ArrayList<String> lista = new ArrayList<>();
        String ruta = "C:\\MEIA\\DonacionIndex.txt";
        String linea = "";
        File f = new File(ruta);
        try {
            if (!f.exists()) {
                f.createNewFile();
            }
            FileReader fr = new FileReader(ruta);
            BufferedReader br = new BufferedReader(fr);
            linea = br.readLine();
            while(linea!=null){
                lista.add(linea);
                linea = br.readLine();
            }
            fr.close();
            br.close();
            f.delete();
            f.createNewFile();
            FileWriter fw = new FileWriter(ruta);
            BufferedWriter bw = new BufferedWriter(fw);
            for (String x :lista) {
                    bw.write(x);
                    bw.newLine();
                }
                bw.write(llave+","+direccion);
            //fw.close();
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(HacerDonación.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void ActualizarDescriptores()
    {
        int Bloque = 1;
        int registros = 0;
        String inicioDesc = "C:\\MEIA\\DonacionDescriptor_";
        String inicioFile = "C:\\MEIA\\Donacion_";
        String ext = ".txt";
        String rutaDesc = inicioDesc+Bloque+ext;
        String rutaFile = inicioFile+Bloque+ext;
        File fD = new File(rutaDesc);
        File fF = new File(rutaFile);
        FileReader filefr = null;
        BufferedReader filebr = null;
        FileWriter descfw = null;
        BufferedWriter descbw = null;
        String lineaFile = "";
        String adminuser = "";
        while(fF.exists()){
            try {
                filefr = new FileReader(rutaFile);
                filebr = new BufferedReader(filefr);
                lineaFile = filebr.readLine();
                while(lineaFile!=null){
                    registros++;
                    lineaFile = filebr.readLine();
                }
                filefr.close();
                filebr.close();
                if (fD.exists()) {
                    fD.delete();
                }
                fD.createNewFile();
                descfw = new FileWriter(rutaDesc);
                descbw = new BufferedWriter(descfw);
                String nombreArchivo = "Nombre del archivo:Donacion_"+Bloque+ext;
                String usuarioCreador = "Usuario creador:";
                File usuarios = new File("C:\\MEIA\\usuario.txt");
                if (usuarios.exists()) {
                    FileReader usuariofr = new FileReader(usuarios);
                    BufferedReader usuariosbr = new BufferedReader(usuariofr);
                    String tempUser = usuariosbr.readLine();
                    if (tempUser!=null){
                        usuarioCreador += tempUser.split("\\|")[0];
                    }else{
                        File bitacora = new File("C:\\MEIA\\bitacora.txt");
                        if (bitacora.exists()){
                            FileReader bitacorafr = new FileReader(bitacora);
                            BufferedReader bitacorabr = new BufferedReader(bitacorafr);
                            tempUser = bitacorabr.readLine();
                            if (tempUser!=null){
                            usuarioCreador += tempUser.split("\\|")[0];
                            }
                            bitacorabr.close();
                        }
                    }
                    usuariofr.close();
                    usuariosbr.close();
                }
                Date fdate = new Date();
                String fecha = "Fecha de creacion:"+ fdate.getDay() +"/"+ fdate.getMonth() +"/2019";
                String cantidadregistros = "Cantidad de registros:" + registros;
                String cantidadregistrosactivos = "Cantidad de registros activos:" + registros;
                String cantidadregistrosinactivos = "Cantidad de registros inactivos:" + 0;
                String maxporbloquedato = "Maximos por bloque:" + 3;
                descbw.write(nombreArchivo);
                descbw.newLine();
                descbw.write(usuarioCreador);
                descbw.newLine();
                descbw.write(fecha);
                descbw.newLine();
                descbw.write(cantidadregistros);
                descbw.newLine();
                descbw.write(cantidadregistrosactivos);
                descbw.newLine();
                descbw.write(cantidadregistrosinactivos);
                descbw.newLine();
                descbw.write(maxporbloquedato);
                descbw.newLine();
                //descfw.close();
                descbw.close();
            } catch (IOException ex) {
                Logger.getLogger(HacerDonación.class.getName()).log(Level.SEVERE, null, ex);
            }
            Bloque++;
            registros = 0;
            rutaDesc = inicioDesc+Bloque+ext;
            rutaFile = inicioFile+Bloque+ext;
            fD = new File(rutaDesc);
            fF = new File(rutaFile);
        }
    }
    
    public void ActualizarDescriptorIndexDonacion()
    {
        File index = new File("C:\\MEIA\\DonacionIndex.txt");
        File desci = new File("C:\\MEIA\\DonacionIndexDesc.txt");
        if (index.exists()){
            try {
                if (desci.exists()){
                    desci.delete();
                }
                desci.createNewFile();
                FileWriter descifw = new FileWriter(desci);
                BufferedWriter descibw = new BufferedWriter(descifw);
                String usuarioCreador = "Usuario creador:";
                File usuarios = new File("C:\\MEIA\\usuario.txt");
                if (usuarios.exists()) {
                    FileReader usuariofr = new FileReader(usuarios);
                    BufferedReader usuariosbr = new BufferedReader(usuariofr);
                    String tempUser = usuariosbr.readLine();
                    if (tempUser!=null){
                        usuarioCreador += tempUser.split("\\|")[0];
                    }else{
                        File bitacora = new File("C:\\MEIA\\bitacora.txt");
                        if (bitacora.exists()){
                            FileReader bitacorafr = new FileReader(bitacora);
                            BufferedReader bitacorabr = new BufferedReader(bitacorafr);
                            tempUser = bitacorabr.readLine();
                            if (tempUser!=null){
                            usuarioCreador += tempUser.split("\\|")[0];
                            }
                            bitacorabr.close();
                        }
                    }
                    usuariofr.close();
                    usuariosbr.close();
                }
                FileReader indexfr = new FileReader(index);
                BufferedReader indexbr = new BufferedReader(indexfr);
                String temp = indexbr.readLine();
                int registros = 0;
                while (temp!=null){
                    registros++;
                    temp = indexbr.readLine();
                }
                indexfr.close();
                indexbr.close();
                Date fdate = new Date();
                descibw.write("Nombre del Archivo:DonacionIndex.txt");
                descibw.newLine();
                descibw.write(usuarioCreador);
                descibw.newLine();
                descibw.write("Fecha creacion:" + fdate.getDay() + "/" + fdate.getMonth() + "/2019");
                descibw.newLine();
                descibw.write("Total registros:" + registros);
                descibw.newLine();
                descibw.write("Registros activos:" + registros);
                descibw.newLine();
                descibw.write("Registros inactivos:" + 0);
                descibw.newLine();
                descibw.close();
            } catch (IOException ex) {
                Logger.getLogger(HacerDonación.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }
    
    
    /**
     * @param args the command line arguments
     */ArrayList<String> Opciones = new ArrayList<String>();
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HacerDonación.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HacerDonación.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HacerDonación.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HacerDonación.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HacerDonación().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCerrar;
    private javax.swing.JButton btDonar;
    private javax.swing.JComboBox<String> cbAnio;
    private javax.swing.JComboBox<String> cbDia;
    private javax.swing.JComboBox<String> cbMes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jcDonador;
    private javax.swing.JComboBox<String> jcMateriales;
    private javax.swing.JTextArea taEvento;
    private javax.swing.JTextField tfDescripcion;
    private javax.swing.JTextField tfPeso;
    // End of variables declaration//GEN-END:variables
}
