/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;
import Clases.Backup;
import Clases.ArchivosIniciales;
import Clases.DatosUsuario;
import static Clases.DatosUsuario.DatosList;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import javax.swing.JOptionPane;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.LinkedList;
import java.util.List;
import java.util.Comparator;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author josei
 */


public class Login extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        Reorganizar();
        ActualizarDescriptores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfUsuario = new javax.swing.JTextField();
        btIniciar = new javax.swing.JButton();
        tfContrasena = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("INICIAR SESIÓN");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Usuario");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Contraseña");

        tfUsuario.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N

        btIniciar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btIniciar.setText("Iniciar Sesión");
        btIniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btIniciarMouseClicked(evt);
            }
        });

        tfContrasena.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(tfUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(tfContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(btIniciar)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         File Carpeta = new File("C:\\MEIA");
        
        if (!Carpeta.exists())
        {
            Carpeta.mkdir();
            ArchivosIniciales a = new ArchivosIniciales();
            a.Creacion();
        }
        try {
                if (usuarios_esta_vacio() &&  bitacora_esta_vacio()) 
                {
                    //crear primer usuario admin
                    this.setVisible(false);
                    new CrearUsuario().setVisible(true);
                }
            } catch (IOException ex) {
                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_formWindowOpened

    private void btIniciarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btIniciarMouseClicked
        //Verificar que se llenen los campos de usuario y contraseña
        if ((tfUsuario.getText().equals(""))|| (tfContrasena.getPassword().length == 0 ))
        {
            JOptionPane.showMessageDialog(null, "Debe ingresar usuario y contraseña para continuar");
        }
        else
        {
            boolean UsuarioEncontrado = false;
            int linea1numero = 1, linea2numero = 1;
            String linealeida1 = "", linealeida2 ="";
            String ContrasenaIngreso = String.valueOf(tfContrasena.getPassword());
            try { //Se busca al usuario ingresado en el archivo de texto
                FileReader Bitacoratxt = new FileReader("C:/MEIA/bitacora.txt");
                BufferedReader UsuarioBitacora = new BufferedReader(Bitacoratxt);
                while (((linealeida1 = UsuarioBitacora.readLine()) != null)) {                    
                    if (linealeida1.contains(tfUsuario.getText())) 
                    { 
                        UsuarioEncontrado = true;
                        JOptionPane.showMessageDialog(null, "Se encontró al usuario");
                        break;
                    }
                    else
                    {
                        linea1numero++;
                    }
                }
                UsuarioBitacora.close();
                Bitacoratxt.close();
                if (UsuarioEncontrado) 
                {
                    this.setVisible(false);
                    IngresarSistema(linealeida1, ContrasenaIngreso);
                }
                else
                {
                    FileReader Usuariotxt = new FileReader("C:/MEIA/usuario.txt");
                BufferedReader UsuarioArchivo = new BufferedReader(Usuariotxt);
                while (((linealeida2 = UsuarioArchivo.readLine()) != null)) 
                {                    
                    if (linealeida2.contains(tfUsuario.getText())) 
                    { 
                        UsuarioEncontrado = true;
                        JOptionPane.showMessageDialog(null, "Se encontró al usuario");
                        break;
                    }
                    else
                    {
                        linea2numero++;
                    }
                }
                UsuarioArchivo.close();
                Usuariotxt.close();
                if(UsuarioEncontrado)
                {
                    this.setVisible(false);
                    IngresarSistema(linealeida2, ContrasenaIngreso);
                }
                else 
                {
                   JOptionPane.showMessageDialog(null, "No se encontró al usuario, contacte al administrador para registrarse");
                }
                }
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
        }
        
    }//GEN-LAST:event_btIniciarMouseClicked
public boolean usuarios_esta_vacio()throws FileNotFoundException, IOException{
        String Cadena;
        FileReader archivo = new FileReader("C:\\MEIA\\usuario.txt");
        BufferedReader lector = new BufferedReader(archivo);
         Cadena = lector.readLine();
         lector.close();
         archivo.close();
         if (Cadena==null) {
            return true;
        }
         else
         {
             return false;
         }
    }


public boolean bitacora_esta_vacio()throws FileNotFoundException, IOException{
        String Cadena;
        FileReader archivo = new FileReader("C:\\MEIA\\bitacora.txt");
        BufferedReader lector = new BufferedReader(archivo);
         Cadena = lector.readLine();
         lector.close();
         archivo.close();
         if (Cadena==null) {
            return true;
        }
         else
         {
             return false;
         }
    }
public static void IngresarSistema (String UsuarioRegistro, String Contra)
{
    String[] CamposUsuario;
    CamposUsuario = UsuarioRegistro.split("\\|");
    if (CamposUsuario.length == 11) 
    {
        if (Contra.equals(CamposUsuario[3])) 
        {//password confirmada
            DatosList= CamposUsuario;
            if ((CamposUsuario[4]).equals("1"))
            {
                JOptionPane.showMessageDialog(null, "El usuario es administrador");
                
                new PanelAdmin().setVisible(true);
            }
            else
            {
                JOptionPane.showMessageDialog(null, "El usuario no es administrador");
                new PanelUsuario().setVisible(true);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Contraseña inválida. \n  Intentelo de nuevo");
            new Login ().setVisible(true);
        }
    }
}
    /**
     * @param args the command line arguments
     */

public static String Usuario = "";
public static String Contrasena = "";
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }
public void Reorganizar ()
{
    File BitacoraA = new File ("C:/MEIA/bitacora.txt");
    File UsuariosA = new File ("C:/MEIA/usuario.txt");
    ArrayList<String> lineasleidas = new ArrayList<String>();
    String linealeida1 = "", linealeida2 ="";
    try { //Se busca al usuario ingresado en el archivo de texto
                FileReader Bitacoratxt = new FileReader("C:/MEIA/bitacora.txt");
                BufferedReader UsuarioBitacora = new BufferedReader(Bitacoratxt);
                while (((linealeida1 = UsuarioBitacora.readLine()) != null)) 
                {   
                    lineasleidas.add(linealeida1);
                }
                UsuarioBitacora.close();
                Bitacoratxt.close();
                if ((lineasleidas.size()) > 6)
                {
                    BitacoraA.delete();
                    BitacoraA.createNewFile();
                    FileReader Usuariotxt = new FileReader("C:/MEIA/usuario.txt");
                    BufferedReader UsuarioFile = new BufferedReader(Usuariotxt);
                    if ((linealeida2 = UsuarioFile.readLine())!= null)
                    {
                        lineasleidas.add(linealeida2);
                        while((linealeida2 = UsuarioFile.readLine())!= null)
                        {
                            lineasleidas.add(linealeida2);
                        }
                        UsuarioFile.close();
                        Usuariotxt.close();
                        Collections.sort(lineasleidas,String.CASE_INSENSITIVE_ORDER);
                        UsuariosA.delete();
                        UsuariosA.createNewFile();
                        FileWriter GuardarCambio = new FileWriter (UsuariosA, true);
                        for(var linea : lineasleidas)
                        {
                           String [] VerificarEstado = linea.split("\\|");
                           if (VerificarEstado[10].equals("1"))
                           {
                               GuardarCambio.write(linea +"\n");
                           }
                        }
                        GuardarCambio.close();
                    }
                    else
                    {
                        Collections.sort(lineasleidas,String.CASE_INSENSITIVE_ORDER);
                        UsuariosA.delete();
                        FileWriter GuardarCambio = new FileWriter (UsuariosA, true);
                        UsuariosA.createNewFile();
                        for(var linea : lineasleidas)
                        {
                           String [] VerificarEstado = linea.split("\\|");
                           if (VerificarEstado[10].equals("1"))
                           {
                               GuardarCambio.write(linea +"\n");
                           }
                        }
                        GuardarCambio.close();
                    }
                    UsuarioFile.close();
                    Usuariotxt.close();
                } 
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null,e.getMessage());
            }
    
}
public void ActualizarDescriptores()
{
    //Variables que se usan para la actualización de desc_bitacora
    int TotalR=0, TotalA = 0, TotalI=0;
    ArrayList<String> CantidadUsuariosBitacora = new ArrayList<String>();
    File DescB = new File("C:/MEIA/desc_bitacora.txt");
    String linealeida ="";
    try 
    { //Se busca al usuario ingresado en el archivo de texto
        FileReader Bitacora = new FileReader("C:/MEIA/bitacora.txt");
        BufferedReader CantBit = new BufferedReader(Bitacora);
        while ((linealeida = CantBit.readLine())!= null)
        {
            String[] VerificarEstado = linealeida.split("\\|");
            if (VerificarEstado[10].equals("1"))
            {
                TotalA ++;
            }
            else
            {
                TotalI ++;
            }
        }
        CantBit.close();
        Bitacora.close();
        TotalR = TotalA + TotalI;
        FileReader DescBitacora = new FileReader("C:/MEIA/desc_bitacora.txt");
        BufferedReader DescBit = new BufferedReader(DescBitacora);
        while ((linealeida = DescBit.readLine())!= null)
        {
            CantidadUsuariosBitacora.add(linealeida);      
        }
        Calendar FechaTransaccion = Calendar.getInstance();
        int Anio = FechaTransaccion.get(Calendar.YEAR);
        int Mes = FechaTransaccion.get(Calendar.MONTH);
        int Dia = FechaTransaccion.get(Calendar.DAY_OF_MONTH);
        int Hora = FechaTransaccion.get(Calendar.HOUR_OF_DAY);
        int Minuto = FechaTransaccion.get(Calendar.MINUTE);
        int Segundo = FechaTransaccion.get(Calendar.SECOND);
        String Modificar = String.valueOf(Dia +"/"+Mes+"/"+ Anio+" "+Hora+":"+Minuto+":"+Segundo);
        CantidadUsuariosBitacora.set(2, ("F_modificación: " + Modificar));
        CantidadUsuariosBitacora.set(4, ("cantidad_total " + TotalR));
        CantidadUsuariosBitacora.set(5, ("cantidad_activos: " + TotalA));
        CantidadUsuariosBitacora.set(6, ("cantidad_inactivos: " + TotalI));
        DescBit.close();
        DescBitacora.close();
        DescB.delete();
        DescB.createNewFile();
        FileWriter ModificarDescB = new FileWriter(DescB, true);
        for(String lineadesc : CantidadUsuariosBitacora)
        {
            ModificarDescB.write(lineadesc + "\n");
        }
        
        ModificarDescB.close();
           
    } catch (Exception e) 
    {
        JOptionPane.showMessageDialog(null,e.getMessage());
    }
    //Variables que se usan para la actualización de desc_usuario
    int TotalRU=0, TotalAU = 0, TotalIU=0;
    ArrayList<String> CantidadUsuariostxt = new ArrayList<String>();
    File DescU = new File("C:/MEIA/desc_usuario.txt");
    String linealeida2 ="";
    try 
    { //Se busca al usuario ingresado en el archivo de texto
        FileReader Usuario = new FileReader("C:/MEIA/usuario.txt");
        BufferedReader CantUsuario = new BufferedReader(Usuario);
        while ((linealeida2 = CantUsuario.readLine())!= null)
        {
            String[] VerificarEstado = linealeida2.split("\\|");
            if (VerificarEstado[10].equals("1"))
            {
                TotalAU ++;
            }
            else
            {
                TotalIU ++;
            }
        }
        CantUsuario.close();
        Usuario.close();
        TotalRU = TotalAU + TotalIU;
        FileReader DescUsuario = new FileReader("C:/MEIA/desc_bitacora.txt");
        BufferedReader DescUsua = new BufferedReader(DescUsuario);
        while ((linealeida2 = DescUsua.readLine())!= null)
        {
            CantidadUsuariostxt.add(linealeida2);      
        }
        Calendar FechaTransaccion = Calendar.getInstance();
        int Anio = FechaTransaccion.get(Calendar.YEAR);
        int Mes = FechaTransaccion.get(Calendar.MONTH);
        int Dia = FechaTransaccion.get(Calendar.DAY_OF_MONTH);
        int Hora = FechaTransaccion.get(Calendar.HOUR_OF_DAY);
        int Minuto = FechaTransaccion.get(Calendar.MINUTE);
        int Segundo = FechaTransaccion.get(Calendar.SECOND);
        String Modificar = String.valueOf(Dia +"/"+Mes+"/"+ Anio+" "+Hora+":"+Minuto+":"+Segundo);
        CantidadUsuariosBitacora.set(2, ("F_modificación: " + Modificar));
        CantidadUsuariosBitacora.set(3, ("F_modificación: " + TotalRU));
        CantidadUsuariosBitacora.set(4, ("F_modificación: " + TotalAU));
        CantidadUsuariosBitacora.set(5, ("F_modificación: " + TotalIU));
        DescUsua.close();
        DescUsuario.close();
        DescB.delete();
        DescB.createNewFile();
        FileWriter ModificarDescB = new FileWriter(DescB, true);
        for(String lineadesc : CantidadUsuariosBitacora)
        {
            ModificarDescB.write(lineadesc + "\n");
        }
        
        ModificarDescB.close();
           
    } catch (Exception e) 
    {
        JOptionPane.showMessageDialog(null,e.getMessage());
    }
       
    
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btIniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField tfContrasena;
    private javax.swing.JTextField tfUsuario;
    // End of variables declaration//GEN-END:variables
}
